@page "/analysisreceptionpoints/edit/{id}"
@using LabModels
@using LabMobile.Services
@inject IAnalysisReceptionPointService AnalysisReceptionPointService
@inject NavigationManager NavigationManager

<h3>Edit Analysis Reception Point</h3>

@if (analysisReceptionPoint == null)
{
    <p>Loading...</p>
}
else
{
    <form @onsubmit="HandleSubmit">
        <div class="form-group">
            <label for="name">Name:</label>
            <input type="text" class="form-control" id="name" @bind-value="@analysisReceptionPoint.Name" />
        </div>
        <div class="form-group">
            <label for="address">Address:</label>
            <input type="text" class="form-control" id="address" @bind-value="@analysisReceptionPoint.Address" />
        </div>
        <div class="form-group">
            <label for="contact-information">Contact Information:</label>
            <input type="text" class="form-control" id="contact-information" @bind-value="@analysisReceptionPoint.ContactInformation" />
        </div>
        <button type="submit" class="btn btn-primary">Update</button>
    </form>
}

@code {
    [Parameter]
    public string Id { get; set; }

    private AnalysisReceptionPoint analysisReceptionPoint;

    protected override async Task OnInitializedAsync()
    {
        Guid analysisReceptionPointId;
        if (Guid.TryParse(Id, out analysisReceptionPointId))
        {
            analysisReceptionPoint = await AnalysisReceptionPointService.GetAnalysisReceptionPointAsync(analysisReceptionPointId);
        }
    }

    private async Task HandleSubmit()
    {
        await AnalysisReceptionPointService.UpdateAnalysisReceptionPointAsync(analysisReceptionPoint.Id, analysisReceptionPoint);
        NavigationManager.NavigateTo("/analysisreceptionpointss");
    }
}
